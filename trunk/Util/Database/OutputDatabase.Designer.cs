//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Component_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Util.Database.Project), "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Util.Database.Component), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Coverage_Component", "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Util.Database.Component), "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Util.Database.Coverage), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Coverage_Iteration", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Util.Database.Iteration), "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Util.Database.Coverage), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_ComponentID", "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Util.Database.Component), "DefectInjectionRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Util.Database.DefectInjectionRate), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Coverage_Coverage", "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Util.Database.Coverage), "Coverage1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Util.Database.Coverage), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_IterationID", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Util.Database.Iteration), "DefectInjectionRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Util.Database.DefectInjectionRate), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Iteration_Iteration", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Util.Database.Iteration), "Iteration1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Util.Database.Iteration), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Project_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Util.Database.Project), "Project1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Util.Database.Project), true)]

#endregion

namespace Util.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CPSC594Entities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CPSC594Entities1 object using the connection string found in the 'CPSC594Entities1' section of the application configuration file.
        /// </summary>
        public CPSC594Entities1() : base("name=CPSC594Entities1", "CPSC594Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CPSC594Entities1 object.
        /// </summary>
        public CPSC594Entities1(string connectionString) : base(connectionString, "CPSC594Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CPSC594Entities1 object.
        /// </summary>
        public CPSC594Entities1(EntityConnection connection) : base(connection, "CPSC594Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Component> Components
        {
            get
            {
                if ((_Components == null))
                {
                    _Components = base.CreateObjectSet<Component>("Components");
                }
                return _Components;
            }
        }
        private ObjectSet<Component> _Components;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coverage> Coverages
        {
            get
            {
                if ((_Coverages == null))
                {
                    _Coverages = base.CreateObjectSet<Coverage>("Coverages");
                }
                return _Coverages;
            }
        }
        private ObjectSet<Coverage> _Coverages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Iteration> Iterations
        {
            get
            {
                if ((_Iterations == null))
                {
                    _Iterations = base.CreateObjectSet<Iteration>("Iterations");
                }
                return _Iterations;
            }
        }
        private ObjectSet<Iteration> _Iterations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefectInjectionRate> DefectInjectionRates
        {
            get
            {
                if ((_DefectInjectionRates == null))
                {
                    _DefectInjectionRates = base.CreateObjectSet<DefectInjectionRate>("DefectInjectionRates");
                }
                return _DefectInjectionRates;
            }
        }
        private ObjectSet<DefectInjectionRate> _DefectInjectionRates;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Components EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComponents(Component component)
        {
            base.AddObject("Components", component);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coverages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoverages(Coverage coverage)
        {
            base.AddObject("Coverages", coverage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Iterations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIterations(Iteration iteration)
        {
            base.AddObject("Iterations", iteration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefectInjectionRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefectInjectionRates(DefectInjectionRate defectInjectionRate)
        {
            base.AddObject("DefectInjectionRates", defectInjectionRate);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="Component")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Component : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Component object.
        /// </summary>
        /// <param name="componentID">Initial value of the ComponentID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="componentName">Initial value of the ComponentName property.</param>
        public static Component CreateComponent(global::System.Int32 componentID, global::System.Int32 projectID, global::System.String componentName)
        {
            Component component = new Component();
            component.ComponentID = componentID;
            component.ProjectID = projectID;
            component.ComponentName = componentName;
            return component;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                if (_ComponentID != value)
                {
                    OnComponentIDChanging(value);
                    ReportPropertyChanging("ComponentID");
                    _ComponentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ComponentID");
                    OnComponentIDChanged();
                }
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ComponentName
        {
            get
            {
                return _ComponentName;
            }
            set
            {
                OnComponentNameChanging(value);
                ReportPropertyChanging("ComponentName");
                _ComponentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ComponentName");
                OnComponentNameChanged();
            }
        }
        private global::System.String _ComponentName;
        partial void OnComponentNameChanging(global::System.String value);
        partial void OnComponentNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Component_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Component_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Component_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Component_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("CPSC594Model.FK_Component_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_Component", "Coverage")]
        public EntityCollection<Coverage> Coverages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coverage>("CPSC594Model.FK_Coverage_Component", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coverage>("CPSC594Model.FK_Coverage_Component", "Coverage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_ComponentID", "DefectInjectionRate")]
        public EntityCollection<DefectInjectionRate> DefectInjectionRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefectInjectionRate>("CPSC594Model.FK_ComponentID", "DefectInjectionRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefectInjectionRate>("CPSC594Model.FK_ComponentID", "DefectInjectionRate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="Coverage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coverage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coverage object.
        /// </summary>
        /// <param name="componentID">Initial value of the ComponentID property.</param>
        /// <param name="linesCovered">Initial value of the LinesCovered property.</param>
        /// <param name="linesExecuted">Initial value of the LinesExecuted property.</param>
        /// <param name="coverageID">Initial value of the CoverageID property.</param>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        public static Coverage CreateCoverage(global::System.Int32 componentID, global::System.Int32 linesCovered, global::System.Int32 linesExecuted, global::System.Int32 coverageID, global::System.Int32 iterationID)
        {
            Coverage coverage = new Coverage();
            coverage.ComponentID = componentID;
            coverage.LinesCovered = linesCovered;
            coverage.LinesExecuted = linesExecuted;
            coverage.CoverageID = coverageID;
            coverage.IterationID = iterationID;
            return coverage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinesCovered
        {
            get
            {
                return _LinesCovered;
            }
            set
            {
                OnLinesCoveredChanging(value);
                ReportPropertyChanging("LinesCovered");
                _LinesCovered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinesCovered");
                OnLinesCoveredChanged();
            }
        }
        private global::System.Int32 _LinesCovered;
        partial void OnLinesCoveredChanging(global::System.Int32 value);
        partial void OnLinesCoveredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinesExecuted
        {
            get
            {
                return _LinesExecuted;
            }
            set
            {
                OnLinesExecutedChanging(value);
                ReportPropertyChanging("LinesExecuted");
                _LinesExecuted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinesExecuted");
                OnLinesExecutedChanged();
            }
        }
        private global::System.Int32 _LinesExecuted;
        partial void OnLinesExecutedChanging(global::System.Int32 value);
        partial void OnLinesExecutedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoverageID
        {
            get
            {
                return _CoverageID;
            }
            set
            {
                if (_CoverageID != value)
                {
                    OnCoverageIDChanging(value);
                    ReportPropertyChanging("CoverageID");
                    _CoverageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoverageID");
                    OnCoverageIDChanged();
                }
            }
        }
        private global::System.Int32 _CoverageID;
        partial void OnCoverageIDChanging(global::System.Int32 value);
        partial void OnCoverageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                OnIterationIDChanging(value);
                ReportPropertyChanging("IterationID");
                _IterationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IterationID");
                OnIterationIDChanged();
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_Component", "Component")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_Coverage_Component", "Component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_Coverage_Component", "Component").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_Coverage_Component", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("CPSC594Model.FK_Coverage_Component", "Component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_Iteration", "Iteration")]
        public Iteration Iteration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Coverage_Iteration", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Coverage_Iteration", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> IterationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Coverage_Iteration", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_Coverage_Iteration", "Iteration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_Coverage", "Coverage1")]
        public Coverage Coverage1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("CPSC594Model.FK_Coverage_Coverage", "Coverage1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("CPSC594Model.FK_Coverage_Coverage", "Coverage1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> Coverage1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("CPSC594Model.FK_Coverage_Coverage", "Coverage1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("CPSC594Model.FK_Coverage_Coverage", "Coverage1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_Coverage", "Coverage")]
        public Coverage Coverage2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("CPSC594Model.FK_Coverage_Coverage", "Coverage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("CPSC594Model.FK_Coverage_Coverage", "Coverage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coverage> Coverage2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coverage>("CPSC594Model.FK_Coverage_Coverage", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coverage>("CPSC594Model.FK_Coverage_Coverage", "Coverage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="DefectInjectionRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefectInjectionRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefectInjectionRate object.
        /// </summary>
        /// <param name="componentID">Initial value of the ComponentID property.</param>
        /// <param name="defectInjectionRateID">Initial value of the DefectInjectionRateID property.</param>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        public static DefectInjectionRate CreateDefectInjectionRate(global::System.Int32 componentID, global::System.Int32 defectInjectionRateID, global::System.Int32 iterationID)
        {
            DefectInjectionRate defectInjectionRate = new DefectInjectionRate();
            defectInjectionRate.ComponentID = componentID;
            defectInjectionRate.DefectInjectionRateID = defectInjectionRateID;
            defectInjectionRate.IterationID = iterationID;
            return defectInjectionRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefectInjectionRateID
        {
            get
            {
                return _DefectInjectionRateID;
            }
            set
            {
                if (_DefectInjectionRateID != value)
                {
                    OnDefectInjectionRateIDChanging(value);
                    ReportPropertyChanging("DefectInjectionRateID");
                    _DefectInjectionRateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DefectInjectionRateID");
                    OnDefectInjectionRateIDChanged();
                }
            }
        }
        private global::System.Int32 _DefectInjectionRateID;
        partial void OnDefectInjectionRateIDChanging(global::System.Int32 value);
        partial void OnDefectInjectionRateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                OnIterationIDChanging(value);
                ReportPropertyChanging("IterationID");
                _IterationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IterationID");
                OnIterationIDChanged();
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfHighDefects
        {
            get
            {
                return _NumberOfHighDefects;
            }
            set
            {
                OnNumberOfHighDefectsChanging(value);
                ReportPropertyChanging("NumberOfHighDefects");
                _NumberOfHighDefects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfHighDefects");
                OnNumberOfHighDefectsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfHighDefects;
        partial void OnNumberOfHighDefectsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfHighDefectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfMediumDefects
        {
            get
            {
                return _NumberOfMediumDefects;
            }
            set
            {
                OnNumberOfMediumDefectsChanging(value);
                ReportPropertyChanging("NumberOfMediumDefects");
                _NumberOfMediumDefects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfMediumDefects");
                OnNumberOfMediumDefectsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfMediumDefects;
        partial void OnNumberOfMediumDefectsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfMediumDefectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfLowDefects
        {
            get
            {
                return _NumberOfLowDefects;
            }
            set
            {
                OnNumberOfLowDefectsChanging(value);
                ReportPropertyChanging("NumberOfLowDefects");
                _NumberOfLowDefects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfLowDefects");
                OnNumberOfLowDefectsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfLowDefects;
        partial void OnNumberOfLowDefectsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfLowDefectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_ComponentID", "Component")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_ComponentID", "Component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_ComponentID", "Component").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_ComponentID", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("CPSC594Model.FK_ComponentID", "Component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_IterationID", "Iteration")]
        public Iteration Iteration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_IterationID", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_IterationID", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> IterationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_IterationID", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_IterationID", "Iteration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="Iteration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Iteration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Iteration object.
        /// </summary>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static Iteration CreateIteration(global::System.Int32 iterationID, global::System.DateTime startDate, global::System.DateTime endDate)
        {
            Iteration iteration = new Iteration();
            iteration.IterationID = iterationID;
            iteration.StartDate = startDate;
            iteration.EndDate = endDate;
            return iteration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                if (_IterationID != value)
                {
                    OnIterationIDChanging(value);
                    ReportPropertyChanging("IterationID");
                    _IterationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IterationID");
                    OnIterationIDChanged();
                }
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_Iteration", "Coverage")]
        public EntityCollection<Coverage> Coverages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coverage>("CPSC594Model.FK_Coverage_Iteration", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coverage>("CPSC594Model.FK_Coverage_Iteration", "Coverage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_IterationID", "DefectInjectionRate")]
        public EntityCollection<DefectInjectionRate> DefectInjectionRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefectInjectionRate>("CPSC594Model.FK_IterationID", "DefectInjectionRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefectInjectionRate>("CPSC594Model.FK_IterationID", "DefectInjectionRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Iteration_Iteration", "Iteration1")]
        public Iteration Iteration1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Iteration_Iteration", "Iteration1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Iteration_Iteration", "Iteration1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> Iteration1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Iteration_Iteration", "Iteration1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_Iteration_Iteration", "Iteration1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Iteration_Iteration", "Iteration")]
        public Iteration Iteration2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Iteration_Iteration", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Iteration_Iteration", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> Iteration2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Iteration_Iteration", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_Iteration_Iteration", "Iteration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static Project CreateProject(global::System.String projectName, global::System.Int32 projectID)
        {
            Project project = new Project();
            project.ProjectName = projectName;
            project.ProjectID = projectID;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Component_Project", "Component")]
        public EntityCollection<Component> Components
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Component>("CPSC594Model.FK_Component_Project", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Component>("CPSC594Model.FK_Component_Project", "Component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Project_Project", "Project1")]
        public Project Project1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Project_Project", "Project1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Project_Project", "Project1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> Project1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Project_Project", "Project1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("CPSC594Model.FK_Project_Project", "Project1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Project_Project", "Project")]
        public Project Project2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Project_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Project_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> Project2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("CPSC594Model.FK_Project_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("CPSC594Model.FK_Project_Project", "Project", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
