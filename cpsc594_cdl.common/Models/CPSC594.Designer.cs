//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Component_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Product), "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.Component), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Coverage_ComponentID", "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Component), "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.Coverage), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_DefectInjectionRate_ComponentID", "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Component), "DefectInjectionRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.DefectInjectionRate), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_DefectRepairRate_ComponentID", "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Component), "DefectRepairRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.DefectRepairRate), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_Coverage_IterationID", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Iteration), "Coverage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.Coverage), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_DefectInjectionRate_IterationID", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Iteration), "DefectInjectionRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.DefectInjectionRate), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_DefectRepairRate_IterationID", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Iteration), "DefectRepairRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.DefectRepairRate), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_OutOfScopeWork_IterationID", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Iteration), "OutOfScopeWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.OutOfScopeWork), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_ResourceUtilization_IterationID", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Iteration), "ResourceUtilization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.ResourceUtilization), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_TestEffectiveness_Iteration", "Iteration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Iteration), "TestEffectiveness", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.TestEffectiveness), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_OutOfScopeWork_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Product), "OutOfScopeWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.OutOfScopeWork), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_ResourceUtilization_ProjectID", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Product), "ResourceUtilization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.ResourceUtilization), true)]
[assembly: EdmRelationshipAttribute("CPSC594Model", "FK_TestEffectiveness_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(cpsc594_cdl.Common.Models.Product), "TestEffectiveness", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(cpsc594_cdl.Common.Models.TestEffectiveness), true)]

#endregion

namespace cpsc594_cdl.Common.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CPSC594Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CPSC594Entities object using the connection string found in the 'CPSC594Entities' section of the application configuration file.
        /// </summary>
        public CPSC594Entities() : base("name=CPSC594Entities", "CPSC594Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CPSC594Entities object.
        /// </summary>
        public CPSC594Entities(string connectionString) : base(connectionString, "CPSC594Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CPSC594Entities object.
        /// </summary>
        public CPSC594Entities(EntityConnection connection) : base(connection, "CPSC594Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Component> Components
        {
            get
            {
                if ((_Components == null))
                {
                    _Components = base.CreateObjectSet<Component>("Components");
                }
                return _Components;
            }
        }
        private ObjectSet<Component> _Components;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coverage> Coverages
        {
            get
            {
                if ((_Coverages == null))
                {
                    _Coverages = base.CreateObjectSet<Coverage>("Coverages");
                }
                return _Coverages;
            }
        }
        private ObjectSet<Coverage> _Coverages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefectInjectionRate> DefectInjectionRates
        {
            get
            {
                if ((_DefectInjectionRates == null))
                {
                    _DefectInjectionRates = base.CreateObjectSet<DefectInjectionRate>("DefectInjectionRates");
                }
                return _DefectInjectionRates;
            }
        }
        private ObjectSet<DefectInjectionRate> _DefectInjectionRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefectRepairRate> DefectRepairRates
        {
            get
            {
                if ((_DefectRepairRates == null))
                {
                    _DefectRepairRates = base.CreateObjectSet<DefectRepairRate>("DefectRepairRates");
                }
                return _DefectRepairRates;
            }
        }
        private ObjectSet<DefectRepairRate> _DefectRepairRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Iteration> Iterations
        {
            get
            {
                if ((_Iterations == null))
                {
                    _Iterations = base.CreateObjectSet<Iteration>("Iterations");
                }
                return _Iterations;
            }
        }
        private ObjectSet<Iteration> _Iterations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OutOfScopeWork> OutOfScopeWorks
        {
            get
            {
                if ((_OutOfScopeWorks == null))
                {
                    _OutOfScopeWorks = base.CreateObjectSet<OutOfScopeWork>("OutOfScopeWorks");
                }
                return _OutOfScopeWorks;
            }
        }
        private ObjectSet<OutOfScopeWork> _OutOfScopeWorks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceUtilization> ResourceUtilizations
        {
            get
            {
                if ((_ResourceUtilizations == null))
                {
                    _ResourceUtilizations = base.CreateObjectSet<ResourceUtilization>("ResourceUtilizations");
                }
                return _ResourceUtilizations;
            }
        }
        private ObjectSet<ResourceUtilization> _ResourceUtilizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestEffectiveness> TestEffectivenesses
        {
            get
            {
                if ((_TestEffectivenesses == null))
                {
                    _TestEffectivenesses = base.CreateObjectSet<TestEffectiveness>("TestEffectivenesses");
                }
                return _TestEffectivenesses;
            }
        }
        private ObjectSet<TestEffectiveness> _TestEffectivenesses;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Components EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComponents(Component component)
        {
            base.AddObject("Components", component);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coverages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoverages(Coverage coverage)
        {
            base.AddObject("Coverages", coverage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefectInjectionRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefectInjectionRates(DefectInjectionRate defectInjectionRate)
        {
            base.AddObject("DefectInjectionRates", defectInjectionRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefectRepairRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefectRepairRates(DefectRepairRate defectRepairRate)
        {
            base.AddObject("DefectRepairRates", defectRepairRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Iterations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIterations(Iteration iteration)
        {
            base.AddObject("Iterations", iteration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OutOfScopeWorks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOutOfScopeWorks(OutOfScopeWork outOfScopeWork)
        {
            base.AddObject("OutOfScopeWorks", outOfScopeWork);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceUtilizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceUtilizations(ResourceUtilization resourceUtilization)
        {
            base.AddObject("ResourceUtilizations", resourceUtilization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestEffectivenesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestEffectivenesses(TestEffectiveness testEffectiveness)
        {
            base.AddObject("TestEffectivenesses", testEffectiveness);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="Component")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Component : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Component object.
        /// </summary>
        /// <param name="componentID">Initial value of the ComponentID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="componentName">Initial value of the ComponentName property.</param>
        public static Component CreateComponent(global::System.Int32 componentID, global::System.Int32 productID, global::System.String componentName)
        {
            Component component = new Component();
            component.ComponentID = componentID;
            component.ProductID = productID;
            component.ComponentName = componentName;
            return component;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                if (_ComponentID != value)
                {
                    OnComponentIDChanging(value);
                    ReportPropertyChanging("ComponentID");
                    _ComponentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ComponentID");
                    OnComponentIDChanged();
                }
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ComponentName
        {
            get
            {
                return _ComponentName;
            }
            set
            {
                OnComponentNameChanging(value);
                ReportPropertyChanging("ComponentName");
                _ComponentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ComponentName");
                OnComponentNameChanged();
            }
        }
        private global::System.String _ComponentName;
        partial void OnComponentNameChanging(global::System.String value);
        partial void OnComponentNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Component_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_Component_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_Component_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_Component_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPSC594Model.FK_Component_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_ComponentID", "Coverage")]
        public EntityCollection<Coverage> Coverages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coverage>("CPSC594Model.FK_Coverage_ComponentID", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coverage>("CPSC594Model.FK_Coverage_ComponentID", "Coverage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_DefectInjectionRate_ComponentID", "DefectInjectionRate")]
        public EntityCollection<DefectInjectionRate> DefectInjectionRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefectInjectionRate>("CPSC594Model.FK_DefectInjectionRate_ComponentID", "DefectInjectionRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefectInjectionRate>("CPSC594Model.FK_DefectInjectionRate_ComponentID", "DefectInjectionRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_DefectRepairRate_ComponentID", "DefectRepairRate")]
        public EntityCollection<DefectRepairRate> DefectRepairRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefectRepairRate>("CPSC594Model.FK_DefectRepairRate_ComponentID", "DefectRepairRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefectRepairRate>("CPSC594Model.FK_DefectRepairRate_ComponentID", "DefectRepairRate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="Coverage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coverage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coverage object.
        /// </summary>
        /// <param name="componentID">Initial value of the ComponentID property.</param>
        /// <param name="linesCovered">Initial value of the LinesCovered property.</param>
        /// <param name="linesExecuted">Initial value of the LinesExecuted property.</param>
        /// <param name="coverageID">Initial value of the CoverageID property.</param>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        public static Coverage CreateCoverage(global::System.Int32 componentID, global::System.Int32 linesCovered, global::System.Int32 linesExecuted, global::System.Int32 coverageID, global::System.Int32 iterationID)
        {
            Coverage coverage = new Coverage();
            coverage.ComponentID = componentID;
            coverage.LinesCovered = linesCovered;
            coverage.LinesExecuted = linesExecuted;
            coverage.CoverageID = coverageID;
            coverage.IterationID = iterationID;
            return coverage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinesCovered
        {
            get
            {
                return _LinesCovered;
            }
            set
            {
                OnLinesCoveredChanging(value);
                ReportPropertyChanging("LinesCovered");
                _LinesCovered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinesCovered");
                OnLinesCoveredChanged();
            }
        }
        private global::System.Int32 _LinesCovered;
        partial void OnLinesCoveredChanging(global::System.Int32 value);
        partial void OnLinesCoveredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinesExecuted
        {
            get
            {
                return _LinesExecuted;
            }
            set
            {
                OnLinesExecutedChanging(value);
                ReportPropertyChanging("LinesExecuted");
                _LinesExecuted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinesExecuted");
                OnLinesExecutedChanged();
            }
        }
        private global::System.Int32 _LinesExecuted;
        partial void OnLinesExecutedChanging(global::System.Int32 value);
        partial void OnLinesExecutedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoverageID
        {
            get
            {
                return _CoverageID;
            }
            set
            {
                if (_CoverageID != value)
                {
                    OnCoverageIDChanging(value);
                    ReportPropertyChanging("CoverageID");
                    _CoverageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoverageID");
                    OnCoverageIDChanged();
                }
            }
        }
        private global::System.Int32 _CoverageID;
        partial void OnCoverageIDChanging(global::System.Int32 value);
        partial void OnCoverageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                OnIterationIDChanging(value);
                ReportPropertyChanging("IterationID");
                _IterationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IterationID");
                OnIterationIDChanged();
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_ComponentID", "Component")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_Coverage_ComponentID", "Component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_Coverage_ComponentID", "Component").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_Coverage_ComponentID", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("CPSC594Model.FK_Coverage_ComponentID", "Component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_IterationID", "Iteration")]
        public Iteration Iteration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Coverage_IterationID", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Coverage_IterationID", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> IterationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_Coverage_IterationID", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_Coverage_IterationID", "Iteration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="DefectInjectionRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefectInjectionRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefectInjectionRate object.
        /// </summary>
        /// <param name="componentID">Initial value of the ComponentID property.</param>
        /// <param name="defectInjectionRateID">Initial value of the DefectInjectionRateID property.</param>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        /// <param name="numberOfHighDefects">Initial value of the NumberOfHighDefects property.</param>
        /// <param name="numberOfMediumDefects">Initial value of the NumberOfMediumDefects property.</param>
        /// <param name="numberOfLowDefects">Initial value of the NumberOfLowDefects property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static DefectInjectionRate CreateDefectInjectionRate(global::System.Int32 componentID, global::System.Int32 defectInjectionRateID, global::System.Int32 iterationID, global::System.Int32 numberOfHighDefects, global::System.Int32 numberOfMediumDefects, global::System.Int32 numberOfLowDefects, global::System.DateTime date)
        {
            DefectInjectionRate defectInjectionRate = new DefectInjectionRate();
            defectInjectionRate.ComponentID = componentID;
            defectInjectionRate.DefectInjectionRateID = defectInjectionRateID;
            defectInjectionRate.IterationID = iterationID;
            defectInjectionRate.NumberOfHighDefects = numberOfHighDefects;
            defectInjectionRate.NumberOfMediumDefects = numberOfMediumDefects;
            defectInjectionRate.NumberOfLowDefects = numberOfLowDefects;
            defectInjectionRate.Date = date;
            return defectInjectionRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefectInjectionRateID
        {
            get
            {
                return _DefectInjectionRateID;
            }
            set
            {
                if (_DefectInjectionRateID != value)
                {
                    OnDefectInjectionRateIDChanging(value);
                    ReportPropertyChanging("DefectInjectionRateID");
                    _DefectInjectionRateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DefectInjectionRateID");
                    OnDefectInjectionRateIDChanged();
                }
            }
        }
        private global::System.Int32 _DefectInjectionRateID;
        partial void OnDefectInjectionRateIDChanging(global::System.Int32 value);
        partial void OnDefectInjectionRateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                OnIterationIDChanging(value);
                ReportPropertyChanging("IterationID");
                _IterationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IterationID");
                OnIterationIDChanged();
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfHighDefects
        {
            get
            {
                return _NumberOfHighDefects;
            }
            set
            {
                OnNumberOfHighDefectsChanging(value);
                ReportPropertyChanging("NumberOfHighDefects");
                _NumberOfHighDefects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfHighDefects");
                OnNumberOfHighDefectsChanged();
            }
        }
        private global::System.Int32 _NumberOfHighDefects;
        partial void OnNumberOfHighDefectsChanging(global::System.Int32 value);
        partial void OnNumberOfHighDefectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfMediumDefects
        {
            get
            {
                return _NumberOfMediumDefects;
            }
            set
            {
                OnNumberOfMediumDefectsChanging(value);
                ReportPropertyChanging("NumberOfMediumDefects");
                _NumberOfMediumDefects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfMediumDefects");
                OnNumberOfMediumDefectsChanged();
            }
        }
        private global::System.Int32 _NumberOfMediumDefects;
        partial void OnNumberOfMediumDefectsChanging(global::System.Int32 value);
        partial void OnNumberOfMediumDefectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfLowDefects
        {
            get
            {
                return _NumberOfLowDefects;
            }
            set
            {
                OnNumberOfLowDefectsChanging(value);
                ReportPropertyChanging("NumberOfLowDefects");
                _NumberOfLowDefects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfLowDefects");
                OnNumberOfLowDefectsChanged();
            }
        }
        private global::System.Int32 _NumberOfLowDefects;
        partial void OnNumberOfLowDefectsChanging(global::System.Int32 value);
        partial void OnNumberOfLowDefectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_DefectInjectionRate_ComponentID", "Component")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_DefectInjectionRate_ComponentID", "Component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_DefectInjectionRate_ComponentID", "Component").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_DefectInjectionRate_ComponentID", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("CPSC594Model.FK_DefectInjectionRate_ComponentID", "Component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_DefectInjectionRate_IterationID", "Iteration")]
        public Iteration Iteration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_DefectInjectionRate_IterationID", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_DefectInjectionRate_IterationID", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> IterationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_DefectInjectionRate_IterationID", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_DefectInjectionRate_IterationID", "Iteration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="DefectRepairRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefectRepairRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefectRepairRate object.
        /// </summary>
        /// <param name="defectRepairRateID">Initial value of the DefectRepairRateID property.</param>
        /// <param name="componentID">Initial value of the ComponentID property.</param>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        /// <param name="numberOfResolvedDefects">Initial value of the NumberOfResolvedDefects property.</param>
        /// <param name="numberOfVerifiedDefects">Initial value of the NumberOfVerifiedDefects property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static DefectRepairRate CreateDefectRepairRate(global::System.Int32 defectRepairRateID, global::System.Int32 componentID, global::System.Int32 iterationID, global::System.Int32 numberOfResolvedDefects, global::System.Int32 numberOfVerifiedDefects, global::System.DateTime date)
        {
            DefectRepairRate defectRepairRate = new DefectRepairRate();
            defectRepairRate.DefectRepairRateID = defectRepairRateID;
            defectRepairRate.ComponentID = componentID;
            defectRepairRate.IterationID = iterationID;
            defectRepairRate.NumberOfResolvedDefects = numberOfResolvedDefects;
            defectRepairRate.NumberOfVerifiedDefects = numberOfVerifiedDefects;
            defectRepairRate.Date = date;
            return defectRepairRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefectRepairRateID
        {
            get
            {
                return _DefectRepairRateID;
            }
            set
            {
                if (_DefectRepairRateID != value)
                {
                    OnDefectRepairRateIDChanging(value);
                    ReportPropertyChanging("DefectRepairRateID");
                    _DefectRepairRateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DefectRepairRateID");
                    OnDefectRepairRateIDChanged();
                }
            }
        }
        private global::System.Int32 _DefectRepairRateID;
        partial void OnDefectRepairRateIDChanging(global::System.Int32 value);
        partial void OnDefectRepairRateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                OnIterationIDChanging(value);
                ReportPropertyChanging("IterationID");
                _IterationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IterationID");
                OnIterationIDChanged();
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfResolvedDefects
        {
            get
            {
                return _NumberOfResolvedDefects;
            }
            set
            {
                OnNumberOfResolvedDefectsChanging(value);
                ReportPropertyChanging("NumberOfResolvedDefects");
                _NumberOfResolvedDefects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfResolvedDefects");
                OnNumberOfResolvedDefectsChanged();
            }
        }
        private global::System.Int32 _NumberOfResolvedDefects;
        partial void OnNumberOfResolvedDefectsChanging(global::System.Int32 value);
        partial void OnNumberOfResolvedDefectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfVerifiedDefects
        {
            get
            {
                return _NumberOfVerifiedDefects;
            }
            set
            {
                OnNumberOfVerifiedDefectsChanging(value);
                ReportPropertyChanging("NumberOfVerifiedDefects");
                _NumberOfVerifiedDefects = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfVerifiedDefects");
                OnNumberOfVerifiedDefectsChanged();
            }
        }
        private global::System.Int32 _NumberOfVerifiedDefects;
        partial void OnNumberOfVerifiedDefectsChanging(global::System.Int32 value);
        partial void OnNumberOfVerifiedDefectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_DefectRepairRate_ComponentID", "Component")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_DefectRepairRate_ComponentID", "Component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_DefectRepairRate_ComponentID", "Component").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("CPSC594Model.FK_DefectRepairRate_ComponentID", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("CPSC594Model.FK_DefectRepairRate_ComponentID", "Component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_DefectRepairRate_IterationID", "Iteration")]
        public Iteration Iteration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_DefectRepairRate_IterationID", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_DefectRepairRate_IterationID", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> IterationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_DefectRepairRate_IterationID", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_DefectRepairRate_IterationID", "Iteration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="Iteration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Iteration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Iteration object.
        /// </summary>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="iterationLabel">Initial value of the IterationLabel property.</param>
        public static Iteration CreateIteration(global::System.Int32 iterationID, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String iterationLabel)
        {
            Iteration iteration = new Iteration();
            iteration.IterationID = iterationID;
            iteration.StartDate = startDate;
            iteration.EndDate = endDate;
            iteration.IterationLabel = iterationLabel;
            return iteration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                if (_IterationID != value)
                {
                    OnIterationIDChanging(value);
                    ReportPropertyChanging("IterationID");
                    _IterationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IterationID");
                    OnIterationIDChanged();
                }
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IterationLabel
        {
            get
            {
                return _IterationLabel;
            }
            set
            {
                OnIterationLabelChanging(value);
                ReportPropertyChanging("IterationLabel");
                _IterationLabel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IterationLabel");
                OnIterationLabelChanged();
            }
        }
        private global::System.String _IterationLabel;
        partial void OnIterationLabelChanging(global::System.String value);
        partial void OnIterationLabelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Coverage_IterationID", "Coverage")]
        public EntityCollection<Coverage> Coverages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coverage>("CPSC594Model.FK_Coverage_IterationID", "Coverage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coverage>("CPSC594Model.FK_Coverage_IterationID", "Coverage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_DefectInjectionRate_IterationID", "DefectInjectionRate")]
        public EntityCollection<DefectInjectionRate> DefectInjectionRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefectInjectionRate>("CPSC594Model.FK_DefectInjectionRate_IterationID", "DefectInjectionRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefectInjectionRate>("CPSC594Model.FK_DefectInjectionRate_IterationID", "DefectInjectionRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_DefectRepairRate_IterationID", "DefectRepairRate")]
        public EntityCollection<DefectRepairRate> DefectRepairRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefectRepairRate>("CPSC594Model.FK_DefectRepairRate_IterationID", "DefectRepairRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefectRepairRate>("CPSC594Model.FK_DefectRepairRate_IterationID", "DefectRepairRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_OutOfScopeWork_IterationID", "OutOfScopeWork")]
        public EntityCollection<OutOfScopeWork> OutOfScopeWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OutOfScopeWork>("CPSC594Model.FK_OutOfScopeWork_IterationID", "OutOfScopeWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OutOfScopeWork>("CPSC594Model.FK_OutOfScopeWork_IterationID", "OutOfScopeWork", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_ResourceUtilization_IterationID", "ResourceUtilization")]
        public EntityCollection<ResourceUtilization> ResourceUtilizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceUtilization>("CPSC594Model.FK_ResourceUtilization_IterationID", "ResourceUtilization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceUtilization>("CPSC594Model.FK_ResourceUtilization_IterationID", "ResourceUtilization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_TestEffectiveness_Iteration", "TestEffectiveness")]
        public EntityCollection<TestEffectiveness> TestEffectivenesses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestEffectiveness>("CPSC594Model.FK_TestEffectiveness_Iteration", "TestEffectiveness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestEffectiveness>("CPSC594Model.FK_TestEffectiveness_Iteration", "TestEffectiveness", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="OutOfScopeWork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OutOfScopeWork : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OutOfScopeWork object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="outOfScopeWorkID">Initial value of the OutOfScopeWorkID property.</param>
        /// <param name="personName">Initial value of the PersonName property.</param>
        /// <param name="personHours">Initial value of the PersonHours property.</param>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static OutOfScopeWork CreateOutOfScopeWork(global::System.Int32 productID, global::System.Int32 outOfScopeWorkID, global::System.String personName, global::System.Double personHours, global::System.Int32 iterationID, global::System.DateTime date)
        {
            OutOfScopeWork outOfScopeWork = new OutOfScopeWork();
            outOfScopeWork.ProductID = productID;
            outOfScopeWork.OutOfScopeWorkID = outOfScopeWorkID;
            outOfScopeWork.PersonName = personName;
            outOfScopeWork.PersonHours = personHours;
            outOfScopeWork.IterationID = iterationID;
            outOfScopeWork.Date = date;
            return outOfScopeWork;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OutOfScopeWorkID
        {
            get
            {
                return _OutOfScopeWorkID;
            }
            set
            {
                if (_OutOfScopeWorkID != value)
                {
                    OnOutOfScopeWorkIDChanging(value);
                    ReportPropertyChanging("OutOfScopeWorkID");
                    _OutOfScopeWorkID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OutOfScopeWorkID");
                    OnOutOfScopeWorkIDChanged();
                }
            }
        }
        private global::System.Int32 _OutOfScopeWorkID;
        partial void OnOutOfScopeWorkIDChanging(global::System.Int32 value);
        partial void OnOutOfScopeWorkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonName
        {
            get
            {
                return _PersonName;
            }
            set
            {
                OnPersonNameChanging(value);
                ReportPropertyChanging("PersonName");
                _PersonName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonName");
                OnPersonNameChanged();
            }
        }
        private global::System.String _PersonName;
        partial void OnPersonNameChanging(global::System.String value);
        partial void OnPersonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PersonHours
        {
            get
            {
                return _PersonHours;
            }
            set
            {
                OnPersonHoursChanging(value);
                ReportPropertyChanging("PersonHours");
                _PersonHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonHours");
                OnPersonHoursChanged();
            }
        }
        private global::System.Double _PersonHours;
        partial void OnPersonHoursChanging(global::System.Double value);
        partial void OnPersonHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                OnIterationIDChanging(value);
                ReportPropertyChanging("IterationID");
                _IterationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IterationID");
                OnIterationIDChanged();
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_OutOfScopeWork_IterationID", "Iteration")]
        public Iteration Iteration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_OutOfScopeWork_IterationID", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_OutOfScopeWork_IterationID", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> IterationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_OutOfScopeWork_IterationID", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_OutOfScopeWork_IterationID", "Iteration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_OutOfScopeWork_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_OutOfScopeWork_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_OutOfScopeWork_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_OutOfScopeWork_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPSC594Model.FK_OutOfScopeWork_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static Product CreateProduct(global::System.String productName, global::System.Int32 productID)
        {
            Product product = new Product();
            product.ProductName = productName;
            product.ProductID = productID;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_Component_Product", "Component")]
        public EntityCollection<Component> Components
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Component>("CPSC594Model.FK_Component_Product", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Component>("CPSC594Model.FK_Component_Product", "Component", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_OutOfScopeWork_Product", "OutOfScopeWork")]
        public EntityCollection<OutOfScopeWork> OutOfScopeWorks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OutOfScopeWork>("CPSC594Model.FK_OutOfScopeWork_Product", "OutOfScopeWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OutOfScopeWork>("CPSC594Model.FK_OutOfScopeWork_Product", "OutOfScopeWork", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_ResourceUtilization_ProjectID", "ResourceUtilization")]
        public EntityCollection<ResourceUtilization> ResourceUtilizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceUtilization>("CPSC594Model.FK_ResourceUtilization_ProjectID", "ResourceUtilization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceUtilization>("CPSC594Model.FK_ResourceUtilization_ProjectID", "ResourceUtilization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_TestEffectiveness_Product", "TestEffectiveness")]
        public EntityCollection<TestEffectiveness> TestEffectivenesses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestEffectiveness>("CPSC594Model.FK_TestEffectiveness_Product", "TestEffectiveness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestEffectiveness>("CPSC594Model.FK_TestEffectiveness_Product", "TestEffectiveness", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="ResourceUtilization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceUtilization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceUtilization object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="resourceUtilizationID">Initial value of the ResourceUtilizationID property.</param>
        /// <param name="personName">Initial value of the PersonName property.</param>
        /// <param name="personHours">Initial value of the PersonHours property.</param>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static ResourceUtilization CreateResourceUtilization(global::System.Int32 productID, global::System.Int32 resourceUtilizationID, global::System.String personName, global::System.Double personHours, global::System.Int32 iterationID, global::System.DateTime date)
        {
            ResourceUtilization resourceUtilization = new ResourceUtilization();
            resourceUtilization.ProductID = productID;
            resourceUtilization.ResourceUtilizationID = resourceUtilizationID;
            resourceUtilization.PersonName = personName;
            resourceUtilization.PersonHours = personHours;
            resourceUtilization.IterationID = iterationID;
            resourceUtilization.Date = date;
            return resourceUtilization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceUtilizationID
        {
            get
            {
                return _ResourceUtilizationID;
            }
            set
            {
                if (_ResourceUtilizationID != value)
                {
                    OnResourceUtilizationIDChanging(value);
                    ReportPropertyChanging("ResourceUtilizationID");
                    _ResourceUtilizationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceUtilizationID");
                    OnResourceUtilizationIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceUtilizationID;
        partial void OnResourceUtilizationIDChanging(global::System.Int32 value);
        partial void OnResourceUtilizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonName
        {
            get
            {
                return _PersonName;
            }
            set
            {
                OnPersonNameChanging(value);
                ReportPropertyChanging("PersonName");
                _PersonName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonName");
                OnPersonNameChanged();
            }
        }
        private global::System.String _PersonName;
        partial void OnPersonNameChanging(global::System.String value);
        partial void OnPersonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PersonHours
        {
            get
            {
                return _PersonHours;
            }
            set
            {
                OnPersonHoursChanging(value);
                ReportPropertyChanging("PersonHours");
                _PersonHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonHours");
                OnPersonHoursChanged();
            }
        }
        private global::System.Double _PersonHours;
        partial void OnPersonHoursChanging(global::System.Double value);
        partial void OnPersonHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                OnIterationIDChanging(value);
                ReportPropertyChanging("IterationID");
                _IterationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IterationID");
                OnIterationIDChanged();
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_ResourceUtilization_IterationID", "Iteration")]
        public Iteration Iteration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_ResourceUtilization_IterationID", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_ResourceUtilization_IterationID", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> IterationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_ResourceUtilization_IterationID", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_ResourceUtilization_IterationID", "Iteration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_ResourceUtilization_ProjectID", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_ResourceUtilization_ProjectID", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_ResourceUtilization_ProjectID", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_ResourceUtilization_ProjectID", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPSC594Model.FK_ResourceUtilization_ProjectID", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CPSC594Model", Name="TestEffectiveness")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestEffectiveness : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestEffectiveness object.
        /// </summary>
        /// <param name="testEffectivenessID">Initial value of the TestEffectivenessID property.</param>
        /// <param name="iterationID">Initial value of the IterationID property.</param>
        /// <param name="testCases">Initial value of the TestCases property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static TestEffectiveness CreateTestEffectiveness(global::System.Int32 testEffectivenessID, global::System.Int32 iterationID, global::System.Int32 testCases, global::System.DateTime date, global::System.Int32 productID)
        {
            TestEffectiveness testEffectiveness = new TestEffectiveness();
            testEffectiveness.TestEffectivenessID = testEffectivenessID;
            testEffectiveness.IterationID = iterationID;
            testEffectiveness.TestCases = testCases;
            testEffectiveness.Date = date;
            testEffectiveness.ProductID = productID;
            return testEffectiveness;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestEffectivenessID
        {
            get
            {
                return _TestEffectivenessID;
            }
            set
            {
                if (_TestEffectivenessID != value)
                {
                    OnTestEffectivenessIDChanging(value);
                    ReportPropertyChanging("TestEffectivenessID");
                    _TestEffectivenessID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestEffectivenessID");
                    OnTestEffectivenessIDChanged();
                }
            }
        }
        private global::System.Int32 _TestEffectivenessID;
        partial void OnTestEffectivenessIDChanging(global::System.Int32 value);
        partial void OnTestEffectivenessIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IterationID
        {
            get
            {
                return _IterationID;
            }
            set
            {
                OnIterationIDChanging(value);
                ReportPropertyChanging("IterationID");
                _IterationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IterationID");
                OnIterationIDChanged();
            }
        }
        private global::System.Int32 _IterationID;
        partial void OnIterationIDChanging(global::System.Int32 value);
        partial void OnIterationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestCases
        {
            get
            {
                return _TestCases;
            }
            set
            {
                OnTestCasesChanging(value);
                ReportPropertyChanging("TestCases");
                _TestCases = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestCases");
                OnTestCasesChanged();
            }
        }
        private global::System.Int32 _TestCases;
        partial void OnTestCasesChanging(global::System.Int32 value);
        partial void OnTestCasesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_TestEffectiveness_Iteration", "Iteration")]
        public Iteration Iteration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_TestEffectiveness_Iteration", "Iteration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_TestEffectiveness_Iteration", "Iteration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Iteration> IterationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Iteration>("CPSC594Model.FK_TestEffectiveness_Iteration", "Iteration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Iteration>("CPSC594Model.FK_TestEffectiveness_Iteration", "Iteration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CPSC594Model", "FK_TestEffectiveness_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_TestEffectiveness_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_TestEffectiveness_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CPSC594Model.FK_TestEffectiveness_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CPSC594Model.FK_TestEffectiveness_Product", "Product", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
